{"version":3,"file":"src_components_Jobs_js.a72d9ab67907b4b2c359.js","mappings":"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","sources":["webpack://edgewater/./src/components/Jobs.js","webpack://edgewater/./src/components/MobileFirstControlGroups.js"],"sourcesContent":["import React,{useContext, useState} from 'react'\nimport {AContext} from '../contexts/acontext'\nimport Countdown from 'react-countdown';\nimport MobileFirstControlGroups from './MobileFirstControlGroups';\n\n\nexport default function Jobs (){\n  const{foundJobs, setFoundJobs, setJob2edit, job2edit} = useContext(AContext)\n  const[job, setJob]=useState('')\n\n  const onEnter =(e)=>{\n    if (e.key === 'Enter') {\n      setJob2edit(job)\n    }\n  }\n\n  const renderJobs=()=>{\n    const jobs = foundJobs.map((j,i)=>{\n      return (\n        <li key={i}>\n          <span> {j.job} </span>\n          <span> {j.category} </span>\n        </li>\n      )\n    })\n    return(\n      <div>\n        <div>{job2edit}</div>\n        <input type=\"text\" onKeyDown={onEnter}   onChange={(e)=>setJob(e.target.value)}/>\n        <ul>\n          {jobs}\n        </ul>\n      </div>\n    )\n  }\n\n  return(\n    <div style ={styles.jobs.div0} >\n      <Countdown date={Date.now() + 100000} />\n      {MobileFirstControlGroups()}\n      Jobsaa\n      {renderJobs()}\n    </div>\n  )\n}\n\nconst styles = {\n  jobs:{\n    div0:{\n      backgroundColor: '#aa9898'\n    }\n  }\n}","import React, { useState } from 'react';\n\nconst MobileFirstControlGroups = () => {\n  const [controls, setControls] = useState([\n    { id: 1, isChecked: false, sliderValue: 50 },\n    { id: 2, isChecked: false, sliderValue: 50 },\n    { id: 3, isChecked: false, sliderValue: 50 },\n    { id: 4, isChecked: false, sliderValue: 50 }\n  ]);\n\n  // Toggle checkbox with mutual exclusion\n  const toggleCheckbox = (id) => {\n    setControls(controls.map(control => ({\n      ...control,\n      isChecked: control.id === id ? !control.isChecked : false\n    })));\n  };\n\n  // Update slider value\n  const updateSlider = (id, value) => {\n    setControls(controls.map(control => \n      control.id === id ? { ...control, sliderValue: value } : control\n    ));\n  };\n\n  // Send values for a specific control\n  const sendValues = (id) => {\n    const control = controls.find(c => c.id === id);\n    if (control) {\n      console.log(`Control ${id} values:`, {\n        active: control.isChecked,\n        value: control.sliderValue\n      });\n      // In a real app, you might use a toast notification instead of alert\n      alert(`Sent - Active: ${control.isChecked}, Value: ${control.sliderValue}`);\n    }\n  };\n\n  // Dynamic slider style function\n  const getSliderStyle = (sliderValue) => ({\n    width: '100%',\n    height: '40px',\n    WebkitAppearance: 'none',\n    background: `linear-gradient(to right, #4a90e2 0%, #4a90e2 ${sliderValue}%, #e0e0e0 ${sliderValue}%, #e0e0e0 100%)`,\n    borderRadius: '20px',\n    padding: 0,\n    margin: 0,\n    '&::-webkit-slider-thumb': {\n      WebkitAppearance: 'none',\n      width: '36px',\n      height: '36px',\n      borderRadius: '50%',\n      background: '#ffffff',\n      border: '2px solid #4a90e2',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.2)'\n    }\n  });\n\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.title}>Control Panel</h1>\n      <p style={styles.subtitle}>Only one option can be active at a time</p>\n      \n      {controls.map((control) => (\n        <div \n          key={control.id} \n          style={{\n            ...styles.controlGroup,\n            backgroundColor: control.isChecked ? '#f5f9ff' : '#fff'\n          }}\n        >\n          {/* Checkbox Row - Larger touch target */}\n          <div \n            style={styles.checkboxRow}\n            onClick={() => toggleCheckbox(control.id)}\n            role=\"button\"\n            tabIndex={0}\n            onKeyDown={(e) => e.key === 'Enter' && toggleCheckbox(control.id)}\n          >\n            <input\n              type=\"checkbox\"\n              id={`control-${control.id}`}\n              checked={control.isChecked}\n              onChange={() => {}}\n              style={styles.checkbox}\n              aria-label={`Toggle control ${control.id}`}\n            />\n            <label \n              htmlFor={`control-${control.id}`} \n              style={styles.checkboxLabel}\n            >\n              Control {control.id}\n            </label>\n          </div>\n\n          {/* Slider with mobile-friendly controls */}\n          <div style={styles.sliderContainer}>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              value={control.sliderValue}\n              onChange={(e) => updateSlider(control.id, parseInt(e.target.value))}\n              style={getSliderStyle(control.sliderValue)}\n              aria-label={`Adjust value for control ${control.id}`}\n            />\n            <div style={styles.sliderValueContainer}>\n              <span style={styles.sliderValue}>\n                {control.sliderValue}\n              </span>\n            </div>\n          </div>\n\n          {/* Mobile-friendly action button */}\n          <button\n            onClick={() => sendValues(control.id)}\n            style={{\n              ...styles.button,\n              ...(control.isChecked ? styles.buttonActive : styles.buttonInactive)\n            }}\n            disabled={!control.isChecked}\n            aria-disabled={!control.isChecked}\n          >\n            <span style={styles.buttonText}>Send Values</span>\n            <span style={styles.buttonBadge}>#{control.id}</span>\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n// Styles\nconst styles = {\n  container: {\n    padding: '16px',\n    width: '100%',\n    maxWidth: '100%',\n    boxSizing: 'border-box',\n    fontFamily: 'system-ui, -apple-system, sans-serif'\n  },\n  title: {\n    color: '#1a1a1a',\n    fontSize: '24px',\n    fontWeight: '600',\n    marginBottom: '8px',\n    lineHeight: '1.3'\n  },\n  subtitle: {\n    color: '#666',\n    fontSize: '16px',\n    marginTop: 0,\n    marginBottom: '24px',\n    lineHeight: '1.5'\n  },\n  controlGroup: {\n    margin: '0 0 16px 0',\n    padding: '16px',\n    border: '1px solid #e0e0e0',\n    borderRadius: '12px',\n    boxShadow: '0 1px 3px rgba(0,0,0,0.05)',\n    transition: 'all 0.2s ease'\n  },\n  checkboxRow: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: '16px',\n    padding: '8px 0',\n    cursor: 'pointer'\n  },\n  checkbox: {\n    width: '24px',\n    height: '24px',\n    marginRight: '12px',\n    accentColor: '#4a90e2',\n    transform: 'scale(1.2)',\n    pointerEvents: 'none'\n  },\n  checkboxLabel: {\n    fontSize: '18px',\n    fontWeight: '500',\n    color: '#1a1a1a',\n    flex: 1\n  },\n  sliderContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '8px',\n    margin: '16px 0'\n  },\n  sliderValueContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  sliderValue: {\n    fontSize: '16px',\n    fontWeight: '500',\n    color: '#4a90e2',\n    minWidth: '40px',\n    textAlign: 'center',\n    background: '#f0f7ff',\n    padding: '4px 8px',\n    borderRadius: '6px'\n  },\n  button: {\n    width: '100%',\n    padding: '14px',\n    border: 'none',\n    borderRadius: '8px',\n    cursor: 'pointer',\n    fontWeight: '600',\n    fontSize: '16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    transition: 'all 0.2s ease'\n  },\n  buttonActive: {\n    backgroundColor: '#4a90e2',\n    color: 'white',\n    boxShadow: '0 2px 6px rgba(74, 144, 226, 0.3)'\n  },\n  buttonInactive: {\n    backgroundColor: '#f5f5f5',\n    color: '#aaa',\n    cursor: 'not-allowed'\n  },\n  buttonText: {\n    flex: 1,\n    textAlign: 'left'\n  },\n  buttonBadge: {\n    backgroundColor: 'rgba(255,255,255,0.2)',\n    padding: '2px 8px',\n    borderRadius: '12px',\n    fontSize: '14px'\n  }\n};\n\nexport default MobileFirstControlGroups;"],"names":["React","useContext","useState","AContext","Countdown","MobileFirstControlGroups","Jobs","_useContext","foundJobs","setFoundJobs","setJob2edit","job2edit","_useState","_useState2","_slicedToArray","job","setJob","onEnter","e","key","renderJobs","jobs","map","j","i","createElement","category","type","onKeyDown","onChange","target","value","style","styles","div0","date","Date","now","backgroundColor","id","isChecked","sliderValue","controls","setControls","toggleCheckbox","control","_objectSpread","updateSlider","sendValues","find","c","console","log","concat","active","alert","getSliderStyle","width","height","WebkitAppearance","background","borderRadius","padding","margin","border","boxShadow","container","title","subtitle","controlGroup","checkboxRow","onClick","role","tabIndex","checked","checkbox","htmlFor","checkboxLabel","sliderContainer","min","max","parseInt","sliderValueContainer","button","buttonActive","buttonInactive","disabled","buttonText","buttonBadge","maxWidth","boxSizing","fontFamily","color","fontSize","fontWeight","marginBottom","lineHeight","marginTop","transition","display","alignItems","cursor","marginRight","accentColor","transform","pointerEvents","flex","flexDirection","gap","justifyContent","minWidth","textAlign"],"sourceRoot":""}